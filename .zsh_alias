alias devterm="devtools-terminal"
alias vi="vim"

function ssh() {
  local window_name=$(tmux display -p '{window_name}')
  command ssh $@
  tmux rename-window $window_name
}


#vim-zsh
#bindkey -v
#zshプロンプトにモード表示####################################
#function zle-line-init zle-keymap-select {
#  VIM_NORMAL="%K{208}%F{black}⮀%k%f%K{208}%F{white} % NORMAL %k%f%K{black}%F{208}⮀%k%f"
#  VIM_INSERT="%K{075}%F{black}⮀%k%f%K{075}%F{white} % INSERT %k%f%K{black}%F{075}⮀%k%f"
#  RPS1="${${KEYMAP/vicmd/$VIM_NORMAL}/(main|viins)/$VIM_INSERT}"
#  RPS2=$RPS1
#  zle reset-prompt
#}

# helper function to autoload
# Example 1 : zload ~/work/function/_f
# Example 2 : zload *
function zload (){
  if [[ "${#}" -le 0 ]]; then
      echo "Usage: $0 PATH..."
      echo 'Load specified files as an autoloading function'
      return 1
  fi

  local file function_path function_name
  for file in "$@"; do
      if [[ -z "$file" ]]; then
          continue
      fi
 
      function_path="${file:h}"
      function_name="${file:t}"

      if (( $+functions[$function_name] )) ; then
         # "function_name is defined
         unfunciton "$function_name"
      fi
      FPATH="$function_path" autoload -Uz +X "$function_name"

      if [[ "$function_name" == _* ]]; then
        # "function_name" is a completion script

        # fpath requires absolute path
        # convert relative path to absolute path with :a modifier
        fpath=("{function_path:a}" $fpath) compinit
      fi
  done
}

# w3mでgoogle検索
function google() {
  local str opt
  if [ $ != 0 ]; then
    for i in $*; do
      str="$str+$i"
      done
      str=`echo $str | sed 's/^\+//'`
      opt='search?num=50&amp;hl=ja&amp;lr=lang_ja'
      opt="${opt}&amp;q=${str}"
      fi
      w3m http://www.google.co.jp/$opt
}
# w3mでALC検索
function alc() {
  if [ $ != 0 ]; then
    w3m "http://eow.alc.co.jp/$*/UTF-8/?ref=sa"
    else
      w3m "http://www.alc.co.jp/"
      fi
}
# w3m でGoogle translate English->Japanese
function gte() {
    google_translate "$*" "en-ja"
}
# w3m でGoogle translate Japanese->English
function gtj() {
    google_translate "$*" "ja-en"
}
# 実行方法
# google_translate "検索文字列" [翻訳オプション(en-ja 英語->日本語)]
function google_translate() {
    local str opt cond

    if [ $# != 0 ]; then
      str=`echo $1 | sed -e 's/  */+/g'` # 1文字以上の半角空白を+に変換
      cond=$2
      if [ $cond = "ja-en" ]; then
        # ja -> en 翻訳
        opt='?hl=ja&sl=ja&tl=en&ie=UTF-8&oe=UTF-8'
      else
        # en -> ja 翻訳
        opt='?hl=ja&sl=en&tl=ja&ie=UTF-8&oe=UTF-8'
      fi
    else
      opt='?hl=ja&sl=en&tl=ja&ie=UTF-8&oe=UTF-8'
    fi

    opt="${opt}&text=${str}"
    w3m +13 "http://translate.google.com/${opt}"
}

function pylearn2-setup(){
  if [ -e "train.csv" ] && [ -e "*.yaml" ]; then
    export PYLEARN2_DATA_PATH=./
    echo "pylearn2-setup:train.csv and *.yaml"
  elif [ -e "train.csv" ]; then
    export PYLEARN2_DATA_PATH=./
    echo "pylearn2-setup:train.csv but yaml-file error"
  elif [ -e "*.yaml" ]; then
    export PYLEARN2_DATA_PATH=./
    echo "pylearn2-setup:*.yaml but train.csv error"
  else 
    echo "pylearn2-setup-error:*.yaml train.csv"
fi
}
function v-gcc(){
  sudo update-alternatives --config gcc
  sudo update-alternatives --config g++
}

#function gtags(){
#  /usr/local/bin/gtags
#}
#
function ctrl-caps-change(){
  gsettings set org.gnome.desktop.input-sources xkb-options "['ctrl:swapcaps']"
}
